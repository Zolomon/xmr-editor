apply plugin: "java"
apply plugin: 'scala'

sourceCompatibility = 1.6

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.scala.srcDirs = ["src/"]

project.ext.mainClassName = "xmr.editor.Main"
project.ext.assetsDir = "../assets"

eclipse.project {
    name = appName + "-editor"
    linkedResource name: 'assets', type: '2', location: 'PARENT-1-PROJECT_LOC/assets'
}

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput =  System.in
    ignoreExitValue = true
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir);

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dist.dependsOn classes

task afterEclipseImport(description: "Post processing after project generation", group: "IDE") {
    doLast {
        def classpath = new XmlParser().parse(file(".classpath"))
        new Node(classpath, "classpathentry", [ kind: 'src', path: 'assets' ]);
        def writer = new FileWriter(file(".classpath"))
        def printer = new XmlNodePrinter(new PrintWriter(writer))
        printer.setPreserveWhitespace(true)
        printer.print(classpath)
    }
}